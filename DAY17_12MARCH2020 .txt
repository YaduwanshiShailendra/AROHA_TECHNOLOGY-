
--###########################################################################--
--                       	DAY17_12-MARCH-2020
--                             ----------------------
--                                    
--###########################################################################--

--its a db link
select * from tab@dblink_1;

--to connect testuser cloud server.
conn testuser/testuser@clouddb;

explain plan for
create materialized view mv_emp 
build immediate
refresh force
on demand
start with sysdate next sysdate+2
with primary key
as select empno,ename, sal*12 from emp;

show user;


conn testuser/testuser@clouddb;

select * from mv_emp;

exec dbms_mview.refresh('mv_emp');

---------------------------------------------------------------------------
--to connect testuser cloud server.
conn testuser/testuser@clouddb;

--'explain plan for' use for plan
explain plan for 
select dname, d.deptno, count(empno),sum(sal)
from dept d, emp e
where d.deptno=e.deptno(+)
group by dname, d.deptno
having count(empno)=(select max(count(empno)) from emp group by deptno);

select * from table (dbms_xplan.display);

-------------------------------------------------------------------------
conn scott/tiger;
explain plan for
select * from mv_emp1;

select * from table (dbms_xplan.display);

--------------------------------------------------------------------------

create materialized view mv_emp1 
build immediate
refresh force
on demand
start with sysdate next sysdate+2
with primary key
as select dname, d.deptno, count(empno),sum(sal)
from dept d, emp e
where d.deptno=e.deptno(+)
group by dname, d.deptno;

---------------------------------------------------------------------------

collect statistics on emp; 



show user;

set autotrace on;
set autotrace on explain;
set autotrace on statistics;
set autotrace traceonly;


select * from emp;

--------------------------------------------------------------------------

create role aroha_dev_level1;

drop role aroha_dev_level;

grant create view, create session, create sequence to aroha_dev_level1;

create role aroha_dev_level2;

grant aroha_dev_level1 to aroha_dev_level2;


--###########################################################################--
--                       	DAY17_12-MARCH-2020
--                             ----------------------
--                                   PL/SQL 
--###########################################################################--

SET SERVEROUTPUT ON;

--1.Write a PL/SQL code to printyour name.

BEGIN 
    DBMS_OUTPUT.PUT_LINE('Shailendra');
END;

--2.Write a PL/SQL code to pass two numbers & print addition of those numbers.

DECLARE 
    V_A INT :=40;
    V_B INT :=50;
    V_C INT;
BEGIN
    V_C := V_A+V_B;
    DBMS_OUTPUT.PUT_LINE(V_C);
END;


--3.Write a PL/SQL code to check number is even or odd.

DECLARE 
    V_A INT :='&n';
BEGIN
    IF MOD(V_A,2)=0 THEN DBMS_OUTPUT.PUT_LINE(V_A|| ' IS EVEN');
    ELSE
    DBMS_OUTPUT.PUT_LINE(V_A|| ' IS ODD');
    END IF;
END;


--4.Write a PL/SQL code to check whether given string is character or number.

DECLARE 
    V_STR VARCHAR(20) :='123';
BEGIN
    IF REGEXP_COUNT(V_STR,'^[0-9]')=0 THEN
    DBMS_OUTPUT.PUT_LINE(V_STR||' is a string');
    ELSE
    DBMS_OUTPUT.PUT_LINE(V_STR||' is a number');
    END IF;
END;


--5.Write a PL/SQL code by passing three numbers and display the largest one.

DECLARE 
    V_A INT :=10;
    V_B INT :=20;
    V_C INT :=30;
BEGIN
    IF
    (V_A > V_B) AND (V_A > V_C) THEN DBMS_OUTPUT.PUT_LINE(V_A||' is the largest one');
    ELSIF
    (V_B > V_A) AND (V_B > V_C) THEN DBMS_OUTPUT.PUT_LINE(V_B||' is the largest one');
    ELSE
    DBMS_OUTPUT.PUT_LINE(V_C||' is the largest one');
    END IF;
END;



--6.Write a PL/SQL code to print the even numbers from 1 to 50.

BEGIN
FOR I IN 1..50 LOOP
IF MOD(I,2)=0 THEN
DBMS_OUTPUT.PUT_LINE(I);
END IF;
END LOOP;
END;


--7.Print the string in vertical manner.

DECLARE
    V_A VARCHAR(20) :='AROHA';
    V_TEMP VARCHAR(1);
    V_J  INT :=1;
BEGIN
    FOR I IN 1..LENGTH(V_A) LOOP
    V_TEMP := SUBSTR(V_A,V_J,1);
    DBMS_OUTPUT.PUT_LINE(V_TEMP);
    V_J := I+1;
    END LOOP;
END;

--8.Write a PL/SQL code by passing a date and print it is weekend or weekday.

DECLARE 
    V_DATE DATE :='&date';
BEGIN
    IF TO_CHAR(V_DATE,'dy') IN ('sat','sun') THEN
    DBMS_OUTPUT.PUT_LINE(V_DATE || ' is a weekend');
    ELSE
    DBMS_OUTPUT.PUT_LINE(V_DATE  ||' is a weekday');
    END IF;
END;

--9.Write a PL/SQL code by passing a date and print all weekend dates of that year.

DECLARE
    V_DATE DATE :='12-03-2020';
    V_START_DT DATE :=TRUNC(V_DATE,'yy');
    V_END_DT DATE :=ADD_MONTHS(V_START_DT,12)-1;
BEGIN
WHILE V_START_DT <= V_END_DT LOOP
    IF
    TO_CHAR(V_START_DT,'dy') IN ('sat','sun') THEN 
    DBMS_OUTPUT.PUT_LINE(V_START_DT || ' is weekend');
    END IF;
    V_START_DT :=V_START_DT+1;
END LOOP;
END;



